"""
    Arbitrary_Wavform_Example.py. 
    
    Keithley PyVisa example code that connects to 6221.
    Creates a sine waveform using the arbitrary waveform functionality with 200 points, and outputs it from the 6221.
    
    Copyright 2024 Tektronix, Inc.                      
    See www.tek.com/sample-license for licensing terms.
"""

from instrcomms import Communications

def main():
    # Configure Visa Connection
    INST_RESOURCE_STR = "TCPIP0::134.63.75.230::1394::SOCKET"  # Instrument resource string, obtained from NI MAX
    my6221 = Communications(INST_RESOURCE_STR)  # Opens the resource manager in PyVISA with the corresponding instrument resource string
    my6221.connect()  # Opens connections to the 4200A-SCS

    # Configure the Waveformmy
    my6221.write("SOUR:WAVE:ARB:DATA 0,0.03156855,0.063105631,0.094579808,0.125959705,0.157214043,0.188311666,0.219221577,0.249912962,0.280355229,0.310518032,0.340371303,0.369885285,0.399030558,0.427778068,0.456099159,0.483965601,0.511349616,0.538223906,0.564561683,0.590336692,0.615523241,0.640096223,0.664031143,0.687304143,0.709892022,0.731772266,0.752923064,0.773323331,0.792952733,0.811791702,0.82982146,0.847024034,0.863382275,0.878879879,0.893501396,0.907232251,0.920058757,0.931968129,0.942948495,0.952988909,0.962079363,0.970210796,0.977375101,0.983565137,0.988774735,0.9929987,0.996232822,0.998473878,0.999719634,0.999968847,0.999221269,0.997477646,0.994739716,0.991010207,0.986292838,0.980592311,0.973914308,0.966265486,0.95765347,0.948086844,0.937575144,0.926128849,0.913759368,0.900479032,0.88630108,0.871239643,0.855309735,0.838527236,0.820908875,0.802472214,0.783235632,0.763218303,0.742440181,0.720921979,0.698685146,0.675751849,0.652144947,0.627887973,0.603005107,0.577521152,0.551461512,0.524852163,0.497719629,0.470090958,0.441993691,0.413455834,0.384505835,0.355172553,0.325485227,0.29547345,0.265167138,0.234596503,0.203792016,0.172784385,0.141604519,0.110283499,0.078852545,0.04734299,0.015786242") # Define arbitrary data points in location 0. Max 100 points per command, 65535 total. Points are evenly spaced on horizontal axis
    my6221.write("SOUR:WAVE:ARB:APP -0.015786242,-0.04734299,-0.078852545,-0.110283499,-0.141604519,-0.172784385,-0.203792016,-0.234596503,-0.265167138,-0.29547345,-0.325485227,-0.355172553,-0.384505835,-0.413455834,-0.441993691,-0.470090958,-0.497719629,-0.524852163,-0.551461512,-0.577521152,-0.603005107,-0.627887973,-0.652144947,-0.675751849,-0.698685146,-0.720921979,-0.742440181,-0.763218303,-0.783235632,-0.802472214,-0.820908875,-0.838527236,-0.855309735,-0.871239643,-0.88630108,-0.900479032,-0.913759368,-0.926128849,-0.937575144,-0.948086844,-0.95765347,-0.966265486,-0.973914308,-0.980592311,-0.986292838,-0.991010207,-0.994739716,-0.997477646,-0.999221269,-0.999968847,-0.999719634,-0.998473878,-0.996232822,-0.9929987,-0.988774735,-0.983565137,-0.977375101,-0.970210796,-0.962079363,-0.952988909,-0.942948495,-0.931968129,-0.920058757,-0.907232251,-0.893501396,-0.878879879,-0.863382275,-0.847024034,-0.82982146,-0.811791702,-0.792952733,-0.773323331,-0.752923064,-0.731772266,-0.709892022,-0.687304143,-0.664031143,-0.640096223,-0.615523241,-0.590336692,-0.564561683,-0.538223906,-0.511349616,-0.483965601,-0.456099159,-0.427778068,-0.399030558,-0.369885285,-0.340371303,-0.310518032,-0.280355229,-0.249912962,-0.219221577,-0.188311666,-0.157214043,-0.125959705,-0.094579808,-0.063105631,-0.03156855,0") # Append data points to arbitary waveform in location 0. Max 100 points per command, 65535 total. Points are evenly spaced on horizontal axis.
    my6221.write("SOUR:WAVE:ARB:COPY 1") # Copy points to location 1. Needs to be copied out of location 0 to 1-4 to be saved through 6221 powercycle.
    my6221.write("SOUR:WAVE:FUNC ARB1") # Select arb wave, location 1.
    my6221.write("SOUR:WAVE:FREQ 10e3") # Set frequency to 10kHz.
    my6221.write("SOUR:WAVE:AMPL 10e-6") # Set amplitude to 10uA.
    my6221.write("SOUR:WAVE:OFFS 0") # Set offset to 0.
    my6221.write("SOUR:WAVE:DUR:TIME 20") # 20 second duration.
    my6221.write("SOUR:WAVE:RANG BEST") # Select best fixed source range.

    # Arm and trigger the waveform, turn on output
    my6221.write("SOUR:WAVE:ARM") #Arm waveform
    my6221.write("SOUR:WAVE:INIT") #Turn on output, trigger waveform.

    # Wait until set test duration elapses by checking when output turns off
    testDone = (my6221.query("OUTP:STAT?"))
    while(testDone == "1"):
        testDone = my6221.query("OUTP:STAT?")

    # Exit Wave Function
    my6221.write("SOUR:WAVE:ABOR")

    my6221.disconnect()# Close Visa Connection
    
    
if __name__ == "__main__":
    main()
